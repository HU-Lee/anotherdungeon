{"version":3,"sources":["data/dungeon sync /^/.*/.json$","View/Component/util/data.js","View/Component/util/func.js","View/Component/ClassChange/ClassChangeUnit.js","View/Page/ClassChangePage.js","View/Component/Dungeon/View/InfoView.js","View/Component/Dungeon/View/PreviewModal.js","View/Component/util/useWindowDimensions.js","View/Component/Dungeon/Unit/MonsterUnit.js","View/Component/Dungeon/Unit/MapModal.js","View/Component/Dungeon/View/MapView.js","View/Component/Dungeon/Unit/CharacterUnit.js","View/Component/Dungeon/View/CharacterView.js","View/Component/Dungeon/View/MonsterView.js","View/Component/Dungeon/Unit/BossUnit.js","View/Component/Dungeon/View/BossView.js","View/Component/Dungeon/Unit/TokenUnit.js","View/Component/Dungeon/View/TokenView.js","View/Component/Dungeon/DungeonComponent.js","View/Page/DungeonPage.js","View/Component/Button/LandingLinkButton.js","View/Page/LandingPage.js","View/Component/Personality/PersonalityUnit.js","View/Page/PersonalityPage.js","_redux/actions.js","View/Component/Header/LanguageSelector.js","logo.png","View/Component/Header/Header.js","App.js","reportWebVitals.js","_redux/reducer.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","dungeonOptions","value","label","chooseLang","language","kor","includes","replace","translate","dictionary","find","ClassChangeUnit","data","another","title","name","hoverable","style","maxWidth","margin","display","justifyContent","alignItems","size","alt","src","dungeon","index","to","fontSize","wordBreak","color","fontWeight","Search","Input","ClassChangePage","useSelector","state","useState","SearchName","setSearchName","bookData","setbookData","require","treatise","codex","bibliography","useEffect","forEach","a","json","character","book","b","element","concat","info","getBook","paddingTop","textAlign","flexDirection","width","marginTop","marginBottom","placeholder","onChange","target","enterButton","flexWrap","breakInside","columnSpan","filteredBook","filter","toLowerCase","filteredTreatise","filteredCodex","filteredBiblio","Fragment","body","Title","Typography","InfoView","level","alignContent","minHeight","hard","veryhard","reward","count","dream","PreviewModal","isModalVisible","setIsModalVisible","onClick","type","height","visible","onOk","onCancel","overflowY","componentDecorator","href","text","key","rel","preview","description","desc","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","MonsterUnit","monster","fear","rarefear","rare","paddingBottom","border","minWidth","marginRight","maxHeight","flexGrow","weak","resist","MapModal","idx","filtered","appear","normal","mapTitle","padding","important","cover","whiteSpace","align","justify","xs","sm","sign","marginLeft","length","Panel","Collapse","MapView","defaultActiveKey","header","columnGap","columnCount","className","CharacterUnit","job","fileName","rate","CharacterView","statusup","multiple","MonsterView","mapNames","Array","from","Set","arr","BossUnit","boss","content","breakAfter","part","trigger","special","BossView","TokenUnit","token","TokenView","DungeonComponent","DungeonData","setDungeonData","backgroundColor","tokens","DungeonPage","props","Dungeon","setDungeon","setInput","options","localStorage","setItem","match","params","DomToImage","toJpeg","document","querySelector","quality","then","dataUrl","link","createElement","download","click","allowClear","filterOption","inputValue","option","console","log","toUpperCase","indexOf","onSelect","history","replaceState","onKeyDown","LandingLinkButton","imgname","str","LandingPage","dungeonName","getItem","PersonalityUnit","colors","personality","PersonalityPage","setSearch","personalities","item","temp","closable","onClose","preventDefault","tag","handleClose","SET_LANGUAGE","Option","Select","LanguageSelector","dispatch","useDispatch","span","setLanguage","defaultValue","Header","logo","App","Swal","fire","html","icon","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","counter","action","store","createStore","reducers","ReactGA","initialize","pageview","location","pathname","search","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c533ae2d.chunk.js","sourcesContent":["var map = {\n\t\"./ancient_garulea_garulea.json\": 150,\n\t\"./ancient_miglania_dragonpalace.json\": 151,\n\t\"./ancient_miglania_icesea.json\": 152,\n\t\"./ancient_miglania_nadara.json\": 153,\n\t\"./ancient_miglania_star.json\": 154,\n\t\"./ancient_miglania_swamp.json\": 155,\n\t\"./ancient_miglania_tales.json\": 156,\n\t\"./ancient_miglania_time.json\": 157,\n\t\"./ancient_zerberiya_crystal.json\": 158,\n\t\"./ancient_zerberiya_eden.json\": 159,\n\t\"./ancient_zerberiya_shadow.json\": 160,\n\t\"./ancient_zerberiya_thunder.json\": 161,\n\t\"./etc_exp.json\": 162,\n\t\"./etc_git.json\": 163,\n\t\"./future_garulea_garulea.json\": 164,\n\t\"./future_miglania_corridor.json\": 165,\n\t\"./future_miglania_garden.json\": 166,\n\t\"./future_miglania_industry.json\": 167,\n\t\"./future_miglania_isukariote.json\": 168,\n\t\"./future_miglania_kms.json\": 169,\n\t\"./future_miglania_machine.json\": 170,\n\t\"./future_miglania_mayu.json\": 171,\n\t\"./future_miglania_saki.json\": 172,\n\t\"./future_miglania_ship.json\": 173,\n\t\"./future_miglania_toto.json\": 174,\n\t\"./future_miglania_zeno.json\": 175,\n\t\"./present_garulea_garulea.json\": 176,\n\t\"./present_miglania_atelier.json\": 177,\n\t\"./present_miglania_atelier_2.json\": 178,\n\t\"./present_miglania_beastcastle.json\": 179,\n\t\"./present_miglania_chrono1.json\": 180,\n\t\"./present_miglania_damak.json\": 181,\n\t\"./present_miglania_dogma.json\": 182,\n\t\"./present_miglania_firecastle.json\": 183,\n\t\"./present_miglania_labyrinth.json\": 184,\n\t\"./present_miglania_mementos.json\": 185,\n\t\"./present_miglania_miglance.json\": 186,\n\t\"./present_miglania_moon.json\": 187,\n\t\"./present_miglania_rucyana.json\": 188,\n\t\"./present_miglania_weird.json\": 189,\n\t\"./shadow_dimension.json\": 190\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 112;","//던전 옵션\r\nexport const dungeonOptions = [\r\n    { value: \"present_garulea_garulea\", label: \"현대 가를레아 대륙\" },\r\n    { value: \"ancient_garulea_garulea\", label: \"고대 가를레아 대륙\"},\r\n    { value: \"future_garulea_garulea\", label: \"미래 가를레아 대륙\"},\r\n    { value: \"shadow_dimension\", label: \"명협계\"},\r\n    { value: \"present_miglania_atelier\", label: \"망향의 아틀리에 - 묘소\" },\r\n    { value: \"present_miglania_atelier_2\", label: \"망향의 아틀리에 - 순례\" },\r\n    { value: \"ancient_zerberiya_crystal\", label: \"고대 제르베리야 결정\" },\r\n    { value: \"ancient_zerberiya_shadow\", label: \"고대 제르베리야 그림자\" },\r\n    { value: \"ancient_zerberiya_thunder\", label: \"고대 제르베리야 번개\"},\r\n    { value: \"ancient_zerberiya_eden\", label: \"실락의 도시\"},\r\n    { value: \"ancient_miglania_swamp\", label: \"식인 늪\" },\r\n    { value: \"ancient_miglania_dragonpalace\", label: \"용궁성\"},\r\n    { value: \"ancient_miglania_nadara\", label: \"나다라 화산\"},\r\n    { value: \"ancient_miglania_star\", label: \"별의 탑\"},\r\n    { value: \"ancient_miglania_tales\", label: \"환시가 꿈꾸는 이야기\"},\r\n    { value: \"ancient_miglania_time\", label: \"시간의 탑\"},\r\n    { value: \"etc_exp\", label: \"봉역 어렴풋한 시각의 틈새\"},\r\n    { value: \"etc_git\", label: \"봉역 덧없는 시각의 틈새\"},\r\n    { value: \"future_miglania_corridor\", label: \"시층회랑\"},\r\n    { value: \"future_miglania_garden\", label: \"공중정원\"},\r\n    { value: \"future_miglania_industry\", label: \"공업도시 폐허\"},\r\n    { value: \"future_miglania_kms\", label: \"구 KMS 본사\"},\r\n    { value: \"future_miglania_mayu\", label: \"마유의 꿈 의식\"},\r\n    { value: \"future_miglania_saki\", label: \"사키의 꿈 의식\"},\r\n    { value: \"future_miglania_ship\", label: \"차원전함\"},\r\n    { value: \"future_miglania_toto\", label: \"토토 드림랜드\"},\r\n    { value: \"future_miglania_zeno\", label: \"제노 도메인\"},\r\n    { value: \"present_miglania_beastcastle\", label: \"마수성\"},\r\n    { value: \"present_miglania_damak\", label: \"뱀의 간 다마크\"},\r\n    { value: \"present_miglania_dogma\", label: \"도그마의 탑\"},\r\n    { value: \"present_miglania_firecastle\", label: \"불타는 마수성\"},\r\n    { value: \"present_miglania_labyrinth\", label: \"미글랜스 지하미궁\"},\r\n    { value: \"present_miglania_mementos\", label: \"메멘토스\"},\r\n    { value: \"present_miglania_miglance\", label: \"미글랜스 성\"},\r\n    { value: \"present_miglania_moon\", label: \"달그림자 숲\"},\r\n    { value: \"present_miglania_weird\", label: \"기묘한 숲\"},\r\n    { value: \"present_miglania_rucyana\", label: \"비경 - 루차나 고적\"},\r\n    { value: \"present_miglania_chrono1\", label: \"이몽 - 시간의 탑\"},\r\n    { value: \"future_miglania_machine\", label: \"상야의 영장기관\"},\r\n    { value: \"future_miglania_isukariote\", label: \"이스카리옷\"},\r\n    { value: \"ancient_miglania_icesea\", label: \"얼음의 바다\"}\r\n];","import dictionary from \"../../../data/dictionary.json\"\r\n\r\n//dictionary.json을 이용해 번역명을 바꿔 주는 함수\r\nexport const chooseLang = (language, kor) => {\r\n    if(kor.includes('(AS)')) {\r\n        return `${chooseLang(language, kor.replace('(AS)', ''))}(AS)`\r\n    } else if (kor.includes('(ES)')) {\r\n        return `${chooseLang(language, kor.replace('(ES)', ''))}(ES)`\r\n    }\r\n    const translate = dictionary.find(e => e.kor === kor)\r\n    if(!translate)\r\n        return language === \"kor\" ? kor : null;\r\n    else\r\n        return translate[language];\r\n}","import React from 'react'\r\nimport { Tooltip, Card, Button } from 'antd'\r\nimport { chooseLang } from '../util/func'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// 직업서 나타내는 Unit\r\nfunction ClassChangeUnit({data, language, another=false}) {\r\n\r\n    return (\r\n        <Tooltip title={chooseLang(language,data.name)}>\r\n            <Card hoverable style={{maxWidth: '200px', margin: '1px', display: 'flex',\r\n                                    justifyContent: 'center', alignItems: 'center'}} size=\"small\">\r\n                <img alt={data.name} style={{maxWidth: \"70px\", margin: \"0 auto\"}}\r\n                src={`images/character_base/${data.name}.png`}/>\r\n                <div style={{margin: \"5px\"}}>\r\n                    {chooseLang(language,data.kor)}\r\n                </div>\r\n                {data.dungeon ? data.dungeon.map((dungeon, index) => (\r\n                    <Link to={`/dungeon/${dungeon.code}`} key={index}>\r\n                        <Button style={{fontSize: '12px',margin: '1px 1px 1px 1px'}}>{chooseLang(language,dungeon.name)}</Button>\r\n                    </Link>\r\n                )) : <div style={{wordBreak: 'keep-all', color: 'red', fontWeight: 600}}>\r\n                    {chooseLang(language, !another ? '환리경, 가를레아,' : \"환리경,\")}<br/>\r\n                    {chooseLang(language, '일반 VH...')}\r\n                </div>}\r\n            </Card>\r\n        </Tooltip>\r\n        \r\n    )\r\n}\r\n\r\nexport default ClassChangeUnit\r\n","import { Empty, Input } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { dungeonOptions } from '../Component/util/data'\r\nimport { chooseLang } from '../Component/util/func'\r\nimport ClassChangeUnit from '../Component/ClassChange/ClassChangeUnit'\r\n\r\nconst { Search } = Input;\r\n\r\nfunction ClassChangePage() {\r\n\r\n    const language = useSelector(state => state.language)\r\n    const [SearchName, setSearchName] = useState(\"\")\r\n\r\n    const HandleChange = (e) => {\r\n        setSearchName(e.target.value);\r\n    }\r\n\r\n    const [bookData, setbookData] = useState()\r\n\r\n    const getBook = () => {\r\n        let data = []\r\n        dungeonOptions.forEach(a => {\r\n            const json = require(`../../data/dungeon/${a.value}.json`)\r\n            if(!json.character.book) return\r\n            else {\r\n                json.character.book.forEach(b => {\r\n                    if(data.find(element => element.name === b.name))\r\n                        data.find(element => element.name === b.name).dungeon\r\n                         = data.find(element => element.name === b.name).dungeon.concat({\r\n                            name: json.info.name,\r\n                            code: json.code\r\n                         })\r\n                    else\r\n                        data = data.concat({\r\n                            name: b.name,\r\n                            kor: b.kor,\r\n                            dungeon: [ {\r\n                                name: json.info.name,\r\n                                code: json.code\r\n                            } ]\r\n                        })\r\n                })\r\n            }\r\n        })\r\n        setbookData(data)\r\n    }\r\n    \r\n    const [treatise] = useState(require('../../data/treatise.json'))\r\n    const [codex] = useState(require('../../data/codex.json'))\r\n    const [bibliography] = useState(require('../../data/bibliography.json'))\r\n\r\n    useEffect(() => {\r\n        getBook()\r\n    }, [])\r\n\r\n    const body = () => {\r\n        if(SearchName === \"\") return <Empty style={{breakInside: 'avoid', columnSpan: 'all'}}/>\r\n        else {\r\n            const filteredBook = bookData.filter(a => chooseLang(language, a.name).toLowerCase().includes(SearchName.toLowerCase())\r\n                                                   || chooseLang(language, a.kor).toLowerCase().includes(SearchName.toLowerCase()))\r\n            const filteredTreatise = treatise.character.book.filter(a => chooseLang(language, a.name).toLowerCase().includes(SearchName.toLowerCase())\r\n                                                                      || chooseLang(language, a.kor).toLowerCase().includes(SearchName.toLowerCase()))\r\n            const filteredCodex = codex.character.book.filter(a => chooseLang(language, a.name).toLowerCase().includes(SearchName.toLowerCase())\r\n                                                                || chooseLang(language, a.kor).toLowerCase().includes(SearchName.toLowerCase()))\r\n            const filteredBiblio = bibliography.character.book.filter(a => chooseLang(language, a.name).toLowerCase().includes(SearchName.toLowerCase())\r\n                                                                || chooseLang(language, a.kor).toLowerCase().includes(SearchName.toLowerCase()))\r\n\r\n            return (<React.Fragment>\r\n                {filteredBook.map((a, index) => (\r\n                    <ClassChangeUnit data={a} key={index} language={language}/>\r\n                ))}\r\n                {filteredTreatise.map((a, index) => (\r\n                    <ClassChangeUnit data={a} key={index} language={language}/>\r\n                ))}\r\n                {filteredCodex.map((a, index) => (\r\n                    <ClassChangeUnit data={a} key={index} language={language}/>\r\n                ))}\r\n                {filteredBiblio.map((a, index) => (\r\n                    <ClassChangeUnit data={a} key={index} language={language} another={true}/>\r\n                ))}\r\n            </React.Fragment>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingTop: \"1rem\", textAlign: 'center', display: 'flex',\r\n                     flexDirection: 'column', alignItems: 'center', justifyContent: 'center',\r\n                     maxWidth: '1500px', margin: '0 auto'}}>\r\n            <h2>Books</h2>\r\n            <b>사진 아래 버튼을 누르시면 해당 던전 정보로 이동합니다.</b>\r\n            <b>단, 이절, 개전은 던전 링크가 표시되지 않습니다.</b>\r\n            <b style={{color: 'red'}}>노말 5성 직업서는 Very Hard 난이도에서만 얻을 수 있습니다.</b>\r\n            <Search style={{width:\"250px\", marginTop: \"3rem\", marginBottom: \"2rem\"}} \r\n            placeholder={chooseLang(language,\"캐릭터, 책 이름 입력\")} \r\n            value={SearchName} \r\n            onChange={HandleChange}\r\n            enterButton />\r\n            <div style={{display: 'inline-flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                {bookData ? body() : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClassChangePage\r\n","import React from 'react'\r\nimport {Typography, Tooltip} from \"antd\";\r\nimport { chooseLang } from '../../util/func';\r\n\r\nconst {Title} = Typography;\r\n\r\nfunction InfoView({data, language}) {\r\n    return (\r\n        <React.Fragment>\r\n            <Title level={3}>{chooseLang(language, data.name)}</Title>\r\n            <div style={{display: 'flex', justifyContent: 'center', alignContent: 'center', minHeight: '30px'}}>\r\n                <div style={{margin: '3px 10px 3px 0', fontSize: \"16px\"}}>\r\n                    {chooseLang(language,\"권장레벨\")} : <b style={{color: 'green'}}>\r\n                        {data.hard ? data.hard.level : \"X\"}\r\n                    </b> / <b style={{color: 'red'}}>\r\n                        {data.veryhard ? data.veryhard.level : \"X\"}\r\n                    </b>\r\n                </div>\r\n                {data.reward ? data.reward.map((a) => (\r\n                    <Tooltip title={chooseLang(language, a)} key={a}>\r\n                        <img src={`../images/menu/${a}.png`} alt={a}/>\r\n                    </Tooltip>\r\n                )) : null}\r\n            </div>\r\n            {data.hard ? <div style={{margin: '5px 5px 5px 5px', fontSize: \"18px\"}}>\r\n                <b style={{color: 'green'}}>Hard</b><b> : {data.hard.count}</b> \r\n            </div> : null}\r\n            {data.veryhard ? <div style={{margin: '5px 5px 5px 5px', fontSize: \"18px\"}}>\r\n                <b style={{color: 'red'}}>Very Hard</b><b> : {data.veryhard.count}</b>\r\n            </div> : null}\r\n            {data.dream ? <React.Fragment>\r\n                <b style={{fontSize: \"15px\", wordBreak: 'keep-all'}}>★ 표시된 상자는 레어 맵일 시 몽영의 서가 나오는 상자입니다.</b>\r\n            </React.Fragment>\r\n\r\n             : null}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default InfoView\r\n","import { Button, Modal } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport ReactLinkify from 'react-linkify';\r\n\r\nfunction PreviewModal({data, language, code}) {\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const showModal = () => {\r\n      setIsModalVisible(true);\r\n    };\r\n  \r\n    const handleOk = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n  \r\n    const handleCancel = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n\r\n    // ReactLinkify에서 링크 클릭 시 새 창으로 띄우기 위한 Decorator\r\n    const componentDecorator = (href, text, key) => (\r\n      <a href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {text}\r\n      </a>\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button onClick={showModal} type=\"primary\" style={{fontSize:'40px', fontWeight: 800, height: '80px', width: '80%', marginTop: '20px'}}>Preview</Button>  \r\n            <Modal title=\"Preview\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}\r\n                   width=\"80%\" style={{ overflowY: \"auto\"}}>\r\n                <ReactLinkify componentDecorator={componentDecorator}>\r\n                  {data.map((preview, index) => (\r\n                      <div key={index} style={{display: 'flex', flexDirection: 'column', alignItems: 'center'\r\n                                              , justifyContent: 'center', margin: '2rem auto'}}>\r\n                          <img src={`../images/preview/${code}_${preview.id}.png`} alt={preview.id} style={{maxWidth: '90%', marginBottom: '5px'}}/>\r\n                          {preview.description.map((desc,index) => (\r\n                              <b style={{fontSize: \"16px\", margin: '0 auto', columnSpan: 'all' }} key={index}>{desc}</b>\r\n                          ))}\r\n                      </div>\r\n                  ))}\r\n                </ReactLinkify>                \r\n            </Modal>\r\n        </React.Fragment> \r\n    )\r\n}\r\n\r\nexport default PreviewModal\r\n","import { useState, useEffect } from 'react';\r\n\r\n// 윈도우 창 크기를 알려 주는 hooks\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React from 'react'\r\nimport { Tooltip } from 'antd'\r\nimport { chooseLang } from '../../util/func'\r\nimport useWindowDimensions from '../../util/useWindowDimensions';\r\n\r\n// 몬스터 약점 내성 정보 등\r\nfunction MonsterUnit({monster, language, code}) {\r\n\r\n    const { width } = useWindowDimensions();\r\n\r\n    const color = (monster) => {\r\n        if(monster.fear || monster.rarefear) return \"3px solid red\"\r\n        else if (monster.description || monster.rare) return \"3px solid orange\"\r\n        else return \"3px solid white\"\r\n    }\r\n\r\n    const monsterTitle = () => {\r\n        if(monster.fear) return \"FEAR\"\r\n        else if (monster.rarefear) return \"RARE FEAR\"\r\n        else if (monster.rare) return \"RARE\"\r\n        else if (monster.description) return monster.description\r\n        else return null\r\n    }\r\n\r\n    return (\r\n        <Tooltip title={monsterTitle()}>\r\n            <div style={{width: `100%`, minHeight: `80px`, breakInside: 'avoid', paddingBottom: '5px', paddingTop: '5px'\r\n                        , display: 'inline-flex', justifyContent: 'center', alignItems: 'center',\r\n                        margin: \"2px 2px 2px 2px\", border: `${color(monster)}`}}>\r\n                <div style={{minWidth: `30%`, maxWidth: '30%', height: `70px`, marginRight: '3px',\r\n                            display: 'flex', justifyContent: 'center', alignItems: 'center',}}>\r\n                    <img alt={monster.id} style={{ maxWidth: \"90%\", maxHeight: '90%'}}\r\n                        src={`../images/monster/${code}_${monster.id}.png`}/>\r\n                </div>\r\n                <div style={{display: 'flex', flexDirection: 'column', flexGrow: 1}}>\r\n                    <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginBottom: '10px'}}>\r\n                        <b style={{margin: '1px 1px 1px 1px', wordBreak: 'keep-all'}}>{chooseLang(language,\"약점\")}</b>\r\n                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center', maxWidth: '110px', flexGrow: 1}}>\r\n                            {monster.weak ? monster.weak.map((type, index) => (\r\n                                <Tooltip title={chooseLang(language,type)} key={index}>\r\n                                    <img alt={type} style={{ width: `${width/2 > 400 || (width > 300 && width < 576) ? \"23%\" : \"25px\"}`}}\r\n                                        src={`../images/types/${type}.png`}/>\r\n                                </Tooltip>\r\n                            )) : <b>{chooseLang(language,\"없음\")}</b>}\r\n                        </div>           \r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                        <b style={{margin: '1px 1px 1px 1px', wordBreak: 'keep-all'}}>{chooseLang(language,\"내성\")}</b>\r\n                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center', maxWidth: '110px', flexGrow: 1}}>\r\n                            {monster.resist ? monster.resist.map((type, index) => (\r\n                                <Tooltip title={chooseLang(language,type)} key={index}>\r\n                                    <img alt={type} style={{ width: `${width/2 > 400 || (width > 300 && width < 576) ? \"23%\" : \"25px\"}`}}\r\n                                        src={`../images/types/${type}.png`}/>\r\n                                </Tooltip>\r\n                            )) : <b>{chooseLang(language,\"없음\")}</b>}\r\n                        </div>           \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Tooltip>\r\n        \r\n    )\r\n}\r\n\r\nexport default MonsterUnit\r\n","import React, { useState } from 'react'\r\nimport { Card, Modal, Row, Col, Image, Empty } from 'antd'\r\nimport { chooseLang } from '../../util/func';\r\nimport MonsterUnit from './MonsterUnit';\r\n\r\n\r\n//맵 정보 + 상세 정보를 알려 주는 모달\r\nfunction MapModal({map, language, idx, code, monster}) {\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const filtered = monster.filter(a => a.appear && a.appear.includes(map.normal))\r\n\r\n    const showModal = () => {\r\n      setIsModalVisible(true);\r\n    };\r\n  \r\n    const handleOk = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n  \r\n    const handleCancel = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n\r\n    const fontSize = 15\r\n\r\n    const mapTitle = (\r\n        <b style={{fontSize: '25px'}}>{chooseLang(language,map.normal)}</b>\r\n    )\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card style={{display: 'inline-flex', flexDirection: 'column', textAlign: 'center', alignItems: 'center'\r\n                          , width: `100%`, padding: '5px', margin: '3px auto', breakInside: `avoid`,\r\n                          border: `${map.important ? \"3px solid red\" : \"3px solid black\"}`}}\r\n                    hoverable size=\"small\"\r\n                    onClick={showModal}\r\n                    cover={<img src={`../images/map/${code}_${idx}.jpg`} alt={idx} style={{maxWidth: \"450px\", margin: '0 auto'}}/>}>\r\n                <b style={{fontSize: `${fontSize}px`, width: '100%', whiteSpace: 'nowrap'}}>{chooseLang(language, map.normal)}&nbsp;</b><br/>\r\n                {map.rare ? <b style={{fontSize: `${fontSize}px`, color: 'red', width: '100%', whiteSpace: 'nowrap'}}>{chooseLang(language, map.rare)}&nbsp;</b> : null}                \r\n            </Card>  \r\n            <Modal title={mapTitle} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}\r\n                   width=\"95%\">\r\n                <Row align=\"middle\" justify=\"center\">\r\n                    <Col xs={24} sm={12} style={{display: 'flex', alignItems:'center', justifyContent: 'center'}}>\r\n                        <Image src={`../images/map/${code}_${idx}.jpg`} alt={idx} style={{maxWidth: \"100%\", margin: '0 auto'}}/>\r\n                        {map.sign ? \r\n                            <img src={`../images/map/${code}_${idx}_sign.jpg`} alt={idx} style={{maxWidth: '70px', marginLeft: '10px'}}/>\r\n                        : null}\r\n                    </Col>\r\n                    <Col xs={24} sm={12} style={{textAlign: 'center'}}>\r\n                        {!map.rare && !map.description && filtered.length <=0 ? <Empty /> : null}\r\n                        {map.rare ? <b style={{fontSize: '20px', color: 'red'}}>Rare Map : {chooseLang(language,map.rare)}</b> : null}\r\n                        {map.description ? <div style={{textAlign: 'center', display: 'flex', flexDirection: 'column'}}>\r\n                            <b style={{fontWeight: 800, fontSize: '18px', marginBottom:\"10px\"}}>특이 사항</b>\r\n                            {map.description.map((a, index) => (\r\n                                <b key={index}>{a}</b>\r\n                            ))}\r\n                        </div> : null}\r\n                        {filtered.length > 0 ? \r\n                        <div style={{textAlign: 'center', display: 'flex', width: '80%', margin: '0 auto', flexDirection: 'column', marginTop: '20px'}}>\r\n                            <b style={{fontWeight: 800, fontSize: '18px'}}>Monster</b>\r\n                            {filtered.map((monster, index) => (\r\n                                <MonsterUnit monster={monster} language={language} code={code} key={index}/>\r\n                            ))}\r\n                        </div>\r\n                         : null}                                   \r\n                    </Col>\r\n                </Row>\r\n            </Modal>\r\n        </React.Fragment>        \r\n    )\r\n}\r\n\r\nexport default MapModal\r\n","import React from 'react'\r\nimport {Typography, Collapse} from \"antd\";\r\nimport MapModal from '../Unit/MapModal';\r\nimport useWindowDimensions from '../../util/useWindowDimensions';\r\n\r\nconst {Title} = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nfunction MapView({data, language, code, monster}) {\r\n\r\n    const { width } = useWindowDimensions();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title level={4} style={{marginTop: \"20px\"}}>Map</Title>\r\n            <Collapse defaultActiveKey={[\"1\"]} style={{margin: '10px 10px 10px 10px'}}>  \r\n                <Panel header=\"Total View\" key=\"1\">\r\n                    <div style={{marginTop: \"10px\", columnGap: '3px',\r\n                            columnCount: `${data.length > 3 && (width/2 > 400 || (width > 300 && width < 576)) ? 2 : 1}`, \r\n                            alignItems: 'center', justifyContent: 'center'}} className=\"dungeoncontainer\">\r\n                        {data.map((map, index) => (\r\n                            <MapModal map={map} language={language} monster={monster} idx={index} key={index} code={code}/>\r\n                        ))}\r\n                    </div>\r\n                </Panel>      \r\n            </Collapse> \r\n        </React.Fragment>    \r\n    )\r\n}\r\n\r\nexport default MapView\r\n","import React from 'react'\r\nimport { chooseLang } from '../../util/func'\r\nimport { Tooltip } from 'antd'\r\n\r\n// 던전에서 캐릭터 정보 나타내는 Unit\r\nfunction CharacterUnit({language, job}) {\r\n\r\n    const title = (job) => {\r\n        if(job.kor) {\r\n            return `${chooseLang(language,job.name)}(${chooseLang(language, job.kor)})`\r\n        } else if (job.rate) {\r\n            return `${chooseLang(language,job.name)} : ${job.rate}`\r\n        } else {\r\n            return chooseLang(language,job)\r\n        }\r\n    }\r\n\r\n    const fileName = job.name ? job.name : job;\r\n\r\n    return (\r\n        <Tooltip title={title(job)}>\r\n            <img alt={job} style={{ width: '18.5%', maxWidth: \"80px\", margin: '2px 2px 2px 2px'}} src={`../images/character_base/${fileName}.png`}/>\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nexport default CharacterUnit\r\n","import React from 'react'\r\nimport {Typography} from \"antd\";\r\nimport { chooseLang } from '../../util/func';\r\nimport CharacterUnit from '../Unit/CharacterUnit';\r\n\r\nconst {Title} = Typography;\r\n\r\nfunction CharacterView({data, language}) {\r\n    return (\r\n        <div style={{padding: '10px'}}>\r\n            {data.statusup ? <React.Fragment>\r\n                <Title level={4} style={{marginTop: \"30px\"}}>{chooseLang(language, \"천명작\")}</Title>\r\n                {data.statusup.map((a, index) => <CharacterUnit job={a} language={language} key={index}/>)} \r\n            </React.Fragment> : null}\r\n            {data.multiple ? <React.Fragment>\r\n                <Title level={4} style={{marginTop: \"30px\"}}>{chooseLang(language, \"배수 캐릭터\")}</Title>\r\n                {data.multiple.map((a, index) => <CharacterUnit job={a} language={language} key={index}/>)} \r\n            </React.Fragment> : null}\r\n            {data.book ? <React.Fragment>\r\n                <Title level={4} style={{marginTop: \"30px\"}}>{chooseLang(language, \"직업서\")} (VH Only)</Title>\r\n                {data.book.map((a, index) => <CharacterUnit job={a} language={language} key={index}/>)} \r\n            </React.Fragment> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterView\r\n","import React from 'react'\r\nimport {Typography, Collapse} from \"antd\";\r\nimport MonsterUnit from '../Unit/MonsterUnit'\r\nimport useWindowDimensions from '../../util/useWindowDimensions';\r\nimport { chooseLang } from '../../util/func';\r\n\r\nconst {Title} = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nfunction MonsterView({data, language, code, map}) {\r\n\r\n    const { width } = useWindowDimensions();\r\n\r\n    const mapNames = Array.from(new Set(map.map(a => a.normal)));\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title level={4} style={{marginTop: \"30px\"}}>Monster</Title>\r\n            <div>\r\n                <b style={{color: 'orange'}}>노란색 : 주의해야 할 잡몹</b><br/>\r\n                <b style={{color: 'red'}}>빨간색 : FEAR</b><br/><br/>\r\n                {code === \"shadow_dimension\" ? <b>몬스터 정보가 일부만 존재합니다.</b> : null}\r\n            </div>\r\n            <Collapse defaultActiveKey={[\"1\"]} style={{margin: '10px 10px 10px 10px'}}>\r\n                {mapNames.map((name, index) => {\r\n                    const arr = data.filter(a => a.appear.includes(name))\r\n                    if(arr.length > 0) {\r\n                        return <Panel header={chooseLang(language,name)} key={index+1} className=\"custom\">\r\n                            <div style={{columnCount: `${width/2 > 400 || (width > 300 && width < 576) ? 2 : 1}`,\r\n                                        columnGap: '3px'}}>\r\n                                {arr.map((monster, index) => (\r\n                                    <MonsterUnit monster={monster} language={language} code={code} key={index}/>\r\n                                ))} \r\n                            </div>\r\n                        </Panel>\r\n                    } else {\r\n                        return null\r\n                    }                    \r\n                })}                  \r\n            </Collapse> \r\n        </React.Fragment>  \r\n    )\r\n}\r\n\r\nexport default MonsterView\r\n","import React from 'react'\r\nimport { Popover, Tooltip } from 'antd'\r\nimport { chooseLang } from '../../util/func'\r\nimport useWindowDimensions from '../../util/useWindowDimensions';\r\n\r\n\r\n// 던전 Boss 나타내는 Component\r\nfunction BossUnit({boss, language, code}) {\r\n\r\n    const { width } = useWindowDimensions();\r\n\r\n    const content = (<div style={{ display: \"flex\", alignItems:'center', justifyContent:'center', textAlign: 'center'}}>\r\n        <div style={{display: 'flex', flexDirection: 'column', breakAfter: 'column', margin: '10px 10px 10px 10px', textAlign: 'center'}}>\r\n            {boss.description ? boss.description.map((a, index) => \r\n                <b style={{fontSize: \"18px\", margin: '0 auto'}} key={index}>{a}</b>\r\n            ) : null}\r\n        </div>        \r\n        {boss.part ? boss.part.map((part, index) => (\r\n            <div key={index} style={{breakAfter: 'column', minWidth: '150px'}}>\r\n                <b style={{margin: '3px 3px 3px 3px', fontSize: \"16px\", color: 'blue'}}>{chooseLang(language,part.name)}</b>\r\n                <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginBottom: '3px', marginTop: '10px'}}>\r\n                    <b style={{margin: '3px 3px 3px 3px'}}>{chooseLang(language,\"약점\")}</b>\r\n                    {part.weak ? part.weak.map((type, index) => (\r\n                        <Tooltip title={chooseLang(language,type)} key={index}>\r\n                            <img alt={type} style={{ width: \"30px\"}} src={`../images/types/${type}.png`}/>\r\n                        </Tooltip>\r\n                    )) : <b> : {chooseLang(language,\"없음\")}</b>}\r\n                </div>\r\n                <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginBottom: '10px'}}>\r\n                    <b style={{margin: '3px 3px 3px 3px'}}>{chooseLang(language,\"내성\")}</b>\r\n                    {part.resist ? part.resist.map((type, index) => (\r\n                        <Tooltip title={chooseLang(language,type)} key={index}>\r\n                            <img alt={type} style={{ width: \"30px\"}} src={`../images/types/${type}.png`}/>\r\n                        </Tooltip>\r\n                    )) : <b> : {chooseLang(language,\"없음\")}</b>}\r\n                </div>\r\n            </div> \r\n        ))        \r\n        : null}\r\n    </div>)\r\n\r\n    return (\r\n        <Popover content={content} trigger=\"click\">\r\n            <div style={{width: `99%`, minHeight: `120px`, display: 'flex', padding: '3px',\r\n                         justifyContent: 'space-around', alignItems: 'center',\r\n                         margin: \"2px 2px 2px 2px\", border: `2px solid ${boss.special ? \"red\" : \"black\"}`}}>\r\n                <div style={{minWidth: `30%`, maxWidth: '30%', height: `110px`, marginRight: '10px',\r\n                            display: 'flex', justifyContent: 'center', alignItems: 'center',}}>\r\n                    <img alt={boss.id} style={{ maxWidth: '100%', maxHeight: '95%'}}\r\n                                                src={`../images/boss/${code}_${boss.id}.png`}/>\r\n                </div>\r\n                <div style={{display: 'flex', flexDirection: 'column', flexGrow: 1}}>\r\n                    <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginBottom: '10px'}}>\r\n                        <b style={{margin: '1px 1px 1px 1px', wordBreak: 'keep-all'}}>{chooseLang(language,\"약점\")}</b>\r\n                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center', maxWidth: '160px', flexGrow: 1}}>\r\n                            {boss.weak ? boss.weak.map((type, index) => (\r\n                                <Tooltip title={chooseLang(language,type)} key={index}>\r\n                                    <img alt={type} style={{ width: `${width/2 > 400 || (width > 300 && width < 576) ? \"23%\" : \"25px\"}`}}\r\n                                        src={`../images/types/${type}.png`}/>\r\n                                </Tooltip>\r\n                            )) : <b>{chooseLang(language,\"없음\")}</b>}\r\n                        </div>           \r\n                    </div>\r\n                    <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                        <b style={{margin: '1px 1px 1px 1px', wordBreak: 'keep-all'}}>{chooseLang(language,\"내성\")}</b>\r\n                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center', maxWidth: '160px', flexGrow: 1}}>\r\n                            {boss.resist ? boss.resist.map((type, index) => (\r\n                                <Tooltip title={chooseLang(language,type)} key={index}>\r\n                                    <img alt={type} style={{ width: `${width/2 > 400 || (width > 300 && width < 576) ? \"23%\" : \"25px\"}`}}\r\n                                        src={`../images/types/${type}.png`}/>\r\n                                </Tooltip>\r\n                            )) : <b>{chooseLang(language,\"없음\")}</b>}\r\n                        </div>           \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </Popover>\r\n    )\r\n}\r\n\r\nexport default BossUnit\r\n","import React from 'react'\r\nimport {Typography} from \"antd\";\r\nimport BossUnit from '../Unit/BossUnit';\r\n\r\nconst {Title} = Typography;\r\n\r\nfunction BossView({data, language, code}) {\r\n    return (\r\n        <div style={{padding: '10px'}}>\r\n            <Title level={4} style={{marginTop: \"30px\"}}>BOSS</Title>\r\n            <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                {data.map((boss, index) => (\r\n                    <BossUnit boss={boss} language={language} code={code} key={index}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BossView\r\n","import React from 'react'\r\nimport { Popover } from 'antd'\r\n\r\n// 토큰 정보\r\nfunction TokenUnit({token, code}) {\r\n\r\n    const content = (\r\n        <div style={{display: 'flex', flexDirection: 'column', textAlign: 'center', minWidth: '100px'}}>\r\n            {token.description ? token.description.map((a, index) => \r\n                <b style={{fontSize: \"18px\", margin: '3px 3px 3px 3px'}} key={index}>\r\n                    {a}\r\n                </b>\r\n            ) : null}\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Popover content={content} trigger=\"click\">\r\n            <div style={{width: '80px', height: '80px', display: 'flex',\r\n                         justifyContent: 'center', alignItems: 'center',\r\n                         margin: \"2px 2px 2px 2px\", border: `2px solid black`}}>\r\n                <img alt={token.id} style={{ maxWidth: \"95%\", maxHeight: '95%'}}\r\n                     src={`../images/tokens/${code}_${token.id}.jpg`}/>\r\n            </div>\r\n        </Popover>\r\n    )\r\n}\r\n\r\nexport default TokenUnit\r\n","import React from 'react'\r\nimport {Typography} from \"antd\";\r\nimport TokenUnit from '../Unit/TokenUnit';\r\n\r\nconst {Title} = Typography;\r\n\r\nfunction TokenView({data, language, code}) {\r\n    return (\r\n        <div style={{padding: '10px'}}>\r\n            <Title level={4} style={{marginTop: \"30px\"}}>Item</Title>\r\n            <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                {data.map((token, index) => (\r\n                    <TokenUnit token={token} language={language} code={code} key={index}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TokenView\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Divider } from 'antd'\r\nimport InfoView from './View/InfoView'\r\nimport PreviewModal from './View/PreviewModal'\r\nimport MapView from './View/MapView'\r\nimport CharacterView from './View/CharacterView'\r\nimport MonsterView from './View/MonsterView'\r\nimport BossView from './View/BossView'\r\nimport TokenView from './View/TokenView'\r\n\r\nfunction DungeonComponent({dungeon, language}) {\r\n\r\n    const [DungeonData, setDungeonData] = useState(require(`../../../data/dungeon/${dungeon}.json`))\r\n\r\n    useEffect(() => {\r\n        setDungeonData(require(`../../../data/dungeon/${dungeon}.json`))\r\n    }, [dungeon])\r\n\r\n    return ( DungeonData ? <div>\r\n        <b style={{fontSize: '20px', fontWeight: 800, wordBreak: 'keep-all'}}>항목을 눌러 추가 정보를 확인하세요.</b>\r\n        <Divider/>\r\n        <Row justify=\"center\" style={{backgroundColor: 'white'}}>            \r\n            <Col xs={24} sm={12}>\r\n                {DungeonData.info ? <InfoView data={DungeonData.info} language={language}/> : null}\r\n                {DungeonData.preview ? <PreviewModal data={DungeonData.preview} language={language} code={DungeonData.code}/> : null}\r\n                {DungeonData.map ? <MapView data={DungeonData.map} language={language} monster={DungeonData.monster} code={DungeonData.code}/> : null}\r\n            </Col>\r\n            <Col xs={24} sm={12}>\r\n                {DungeonData.character ? <CharacterView data={DungeonData.character} language={language} /> : null}\r\n                {DungeonData.monster ? <MonsterView data={DungeonData.monster} language={language} map={DungeonData.map} code={DungeonData.code}/> : null}\r\n                {DungeonData.boss ? <BossView data={DungeonData.boss} language={language} code={DungeonData.code}/> : null}\r\n                {DungeonData.tokens ? <TokenView data={DungeonData.tokens} language={language} code={DungeonData.code}/> : null}\r\n            </Col>\r\n        </Row> \r\n    </div> : null )\r\n}\r\n\r\nexport default DungeonComponent\r\n","import React, { useEffect, useState } from 'react'\r\nimport { AutoComplete, Button } from 'antd'\r\nimport { dungeonOptions } from '../Component/util/data'\r\nimport DungeonComponent from '../Component/Dungeon/DungeonComponent'\r\nimport { useSelector } from 'react-redux'\r\nimport { chooseLang } from '../Component/util/func'\r\nimport DomToImage from 'dom-to-image'\r\n\r\nfunction DungeonPage(props) {\r\n\r\n    const [Dungeon, setDungeon] = useState()\r\n\r\n    const getDungeon = () => {\r\n        window.localStorage.setItem(\"anotherdungeon\", props.match.params.name)\r\n        setDungeon(props.match.params.name)\r\n    }\r\n\r\n    const [Input, setInput] = useState(\"\")\r\n\r\n    const language = useSelector(state => state.language)\r\n\r\n    const options = dungeonOptions.map(a => (\r\n        {\r\n            value: a.value,\r\n            label: chooseLang(language, a.label)\r\n        }\r\n    ))\r\n\r\n    const onKeyDown = (e) => {\r\n        if(e.key === \"Enter\") {\r\n            const filtered = options.filter(a => a.label.toUpperCase().includes(e.target.value.toUpperCase()))\r\n            if(filtered.length > 0) {\r\n                setDungeon(filtered[0].value)\r\n                window.localStorage.setItem(\"anotherdungeon\", filtered[0].value)\r\n                window.history.replaceState(null, `${filtered[0].value}`, `${filtered[0].value}`)\r\n                setInput(filtered[0].label)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSaveClick = () => {\r\n      DomToImage.toJpeg(document.querySelector('.dungeoncontainer'), { quality: 1 })\r\n      .then(function (dataUrl) {\r\n          var link = document.createElement('a');\r\n          link.download = `${Dungeon}.jpeg`;\r\n          link.href = dataUrl;\r\n          link.click();\r\n      });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDungeon()\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{paddingTop: \"2rem\", textAlign: 'center', maxWidth: '1500px', margin: '0 auto'}}>\r\n            <h2>Dungeon</h2>\r\n            <Button type=\"primary\" onClick={handleSaveClick} style={{margin:\"1rem\"}}>Map Download</Button>\r\n            <AutoComplete\r\n                style={{ width: 250, marginBottom: '30px'}}\r\n                allowClear\r\n                options={options}\r\n                placeholder={chooseLang(language, \"던전 이름을 입력하세요.\")}\r\n                value={Input}\r\n                filterOption={(inputValue, option) => {\r\n                    console.log(inputValue)\r\n                    return option.label.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                }}\r\n                onChange={(value) => setInput(value)}\r\n                onSelect={(value) => {\r\n                    const b = options.find(a => a.value.toUpperCase() === value.toUpperCase())\r\n                    setDungeon(value)\r\n                    window.localStorage.setItem(\"anotherdungeon\", value)\r\n                    window.history.replaceState(null, `${value}`, `${value}`)\r\n                    setInput(b.label)\r\n                }}\r\n                onKeyDown={onKeyDown}\r\n            />\r\n            {Dungeon ? <DungeonComponent dungeon={Dungeon} language={language}/> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DungeonPage\r\n","import { Button } from 'antd';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { chooseLang } from '../util/func';\r\n\r\n// 메인 페이지 링크 버튼\r\nfunction LandingLinkButton({imgname, link, str, language}) {\r\n    return (\r\n        <Link to={link} rel=\"noreferrer\" style={{display: 'inline-block'}}>\r\n            <Button style={{display: 'flex', flexDirection: 'column', textAlign: 'center', alignItems: 'center'\r\n                          , height: \"130px\", width: \"130px\", padding: \"10px\"}}>\r\n                <img src={`images/menu/${imgname}.png`} alt={imgname} style={{maxHeight: '80px', margin: '0 auto'}}/>\r\n                <b style={{fontSize: '20px'}}>{chooseLang(language, str)}</b>\r\n            </Button>  \r\n        </Link>    \r\n    )\r\n}\r\n\r\nexport default LandingLinkButton\r\n","import React from 'react'\r\nimport LandingLinkButton from '../Component/Button/LandingLinkButton'\r\nimport { Button } from 'antd';\r\nimport { dungeonOptions } from '../Component/util/data';\r\nimport { chooseLang } from '../Component/util/func';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction LandingPage() {\r\n\r\n    const language = useSelector(state => state.language)\r\n    const dungeonName = window.localStorage.getItem(\"anotherdungeon\")\r\n                      ? window.localStorage.getItem(\"anotherdungeon\")\r\n                      : dungeonOptions[0].value\r\n\r\n    return (\r\n        <div style={{paddingTop: \"2rem\", textAlign: 'center', maxWidth: '300px', margin: '0 auto'}}>\r\n            <LandingLinkButton str=\"던전\" link={`/dungeon/${dungeonName}`} imgname=\"dungeon\" language={language}/>\r\n            <LandingLinkButton str=\"직업서\" link=\"/class\" imgname=\"book\" language={language}/>\r\n            <LandingLinkButton str=\"퍼스널리티\" link=\"/personality\" imgname=\"person\" language={language}/>\r\n            <a href=\"https://hu-lee.github.io/anothercharcheck/\" target=\"_blank\" rel=\"noreferrer\"  style={{display: 'inline-block'}}>\r\n                <Button style={{display: 'flex', flexDirection: 'column', textAlign: 'center', alignItems: 'center'\r\n                          , height: \"130px\", width: \"130px\", padding: \"10px\"}}>\r\n                    <img src={`images/menu/cyrus.png`} alt=\"cyrus\" style={{maxHeight: '80px', margin: '0 auto'}}/>\r\n                    <b style={{fontSize: '20px'}}>{chooseLang(language, \"체크리스트\")}</b>\r\n                </Button>  \r\n            </a> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","import React from 'react'\r\nimport {Card, Tooltip, Tag} from 'antd'\r\nimport { chooseLang } from '../util/func'\r\n\r\nfunction PersonalityUnit({data, language}) {\r\n\r\n    const colors = [\"magenta\", \"volcano\", \"gold\", \"green\", \"cyan\", \"blue\", \"purple\"]\r\n\r\n    return (\r\n        <Tooltip title={chooseLang(language,data.name)}>\r\n            <Card hoverable style={{maxWidth: '200px', margin: '1px', display: 'flex',\r\n                                    justifyContent: 'center', alignItems: 'center'}} size=\"small\">\r\n                <img alt={data.name} style={{maxWidth: \"70px\", margin: \"0 auto\"}}\r\n                src={`images/character_base/${data.name}.png`}/>\r\n                <div style={{marginTop: '10px'}}>\r\n                    {data.personality.map((a,index) => (\r\n                        <Tag style={{margin: '1px'}} color={colors[index%7]} key={index}>{chooseLang(language,a)}</Tag>\r\n                    ))}\r\n                </div>\r\n                <div style={{marginTop: '10px'}}>\r\n                    {data.description ? <b style={{color: 'red'}}>{chooseLang(language, data.description)}</b> : null }    \r\n                </div>\r\n            </Card>        \r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nexport default PersonalityUnit\r\n","import React, { useState } from 'react'\r\nimport { Empty, AutoComplete, Tag } from 'antd';\r\nimport personality from \"../../data/personality.json\"\r\nimport { useSelector } from 'react-redux';\r\nimport PersonalityUnit from '../Component/Personality/PersonalityUnit';\r\nimport { chooseLang } from '../Component/util/func';\r\n\r\nconst colors = [\"magenta\", \"volcano\", \"gold\", \"green\", \"cyan\", \"blue\", \"purple\"]\r\n\r\nfunction PersonalityPage() {\r\n\r\n    const [Search, setSearch] = useState([])\r\n    const [Input, setInput] = useState(\"\")\r\n    const language = useSelector(state => state.language)\r\n\r\n    const personalities = () => {\r\n        let data = []\r\n        personality.forEach(a => {\r\n            data = data.concat(a.personality)\r\n        })\r\n        console.log(Array.from(new Set(data)).map(a => ( \r\n            { name: a,  value : chooseLang(language,a) } \r\n        )))\r\n        return Array.from(new Set(data)).map(a => ( \r\n            { name: a,  value : chooseLang(language,a) } \r\n        ))\r\n    }\r\n\r\n    const filtered = personality.filter(item => {\r\n        let temp = true;\r\n        Search.forEach(b => {\r\n            if(item.personality.indexOf(b) === -1)\r\n                temp = false;\r\n        })\r\n        return temp;\r\n    })\r\n\r\n    const onKeyDown = (e) => {\r\n        if(e.key === \"Enter\") {\r\n            const arr = personalities().filter(a => a.value.toUpperCase().includes(e.target.value.toUpperCase()))\r\n            if(arr.length > 0) {\r\n                setSearch(Array.from(new Set([...Search, arr[0].name])))\r\n                setInput(\"\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleClose = (tag) => {\r\n        setSearch(Search.filter(item => item !== tag))\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingTop: \"1rem\", textAlign: 'center', display: 'flex',\r\n                     flexDirection: 'column', alignItems: 'center', justifyContent: 'center',\r\n                     maxWidth: '1500px', margin: '0 auto'}}>\r\n            <h2>{chooseLang(language, \"퍼스널리티\")}</h2>\r\n            <div style={{display: 'flex', maxWidth: '400px', flexWrap: 'wrap', margin: '10px 10px 10px 10px'}}>\r\n                {Search.map((a, index) => (\r\n                    <Tag style={{margin: '1px'}} color={colors[index%7]} key={index} closable \r\n                    onClose={(e) => {\r\n                        e.preventDefault()\r\n                        handleClose(a)\r\n                    }}>\r\n                        {chooseLang(language,a)}\r\n                    </Tag>\r\n                ))}\r\n            </div>            \r\n            <AutoComplete\r\n                style={{ width: 250, marginBottom: '30px'}}\r\n                options={personalities()}\r\n                value={Input}\r\n                filterOption={(inputValue, option) =>\r\n                    option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                }\r\n                placeholder={chooseLang(language, \"퍼스널리티\")+\" Search\"}\r\n                onChange={(value) => setInput(value)}\r\n                onSelect={(value) => {\r\n                    const b = personalities().find(a => a.value.toUpperCase() === value.toUpperCase())\r\n                    setSearch(Array.from(new Set([...Search, b.name])))\r\n                    setInput(\"\")\r\n                }}\r\n                onKeyDown={onKeyDown}\r\n            />\r\n            <div style={{display: 'inline-flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                {Search.length > 0 ? filtered.map((item, index) => (\r\n                    <PersonalityUnit data={item} key={index} language={language}/>\r\n                )) : <Empty/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonalityPage\r\n","export const SET_LANGUAGE = 'SET_LANGUAGE';\r\n\r\nexport const setLanguage = (language) => ({\r\n    type: SET_LANGUAGE,\r\n    language\r\n})","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col, Select} from \"antd\";\r\nimport { setLanguage } from '../../../_redux/actions';\r\n\r\nconst { Option } = Select;\r\n\r\nfunction LanguageSelector() {\r\n\r\n    const dispatch = useDispatch()\r\n    const language = useSelector(state => state.language)\r\n\r\n    const changeLang = (value) => {\r\n        dispatch(setLanguage(value))\r\n        window.localStorage.setItem(\"language\", value)\r\n    }\r\n\r\n    return (\r\n        <Col span={24} style={{margin: '0 auto', marginBottom: \"10px\"}}>\r\n            <b style={{margin: '15px'}}>Language Select</b>\r\n            <Select onChange={changeLang} defaultValue={language} style={{margin: \"5px auto\"}}>\r\n                <Option value=\"kor\">한국어</Option>\r\n                <Option value=\"jap\">日本語</Option>\r\n                <Option value=\"eng\">English</Option>\r\n            </Select>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default LanguageSelector","export default __webpack_public_path__ + \"static/media/logo.7cbb91e4.png\";","import { Row, Tooltip } from 'antd'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport LanguageSelector from './LanguageSelector'\r\nimport { chooseLang } from '../util/func';\r\nimport logo from \"../../../logo.png\"\r\n\r\n/*-- \r\nSPDX-FileCopyrightText: © 2021 Hyun Uk Lee <as0266@naver.com>\r\n\r\nSPDX-License-Identifier: MIT\r\n--*/  \r\n\r\nfunction Header() {\r\n\r\n    const language = useSelector(state => state.language)\r\n\r\n    return (\r\n        <div style={{textAlign: 'center', display: 'flex', flexDirection: 'column'}}>\r\n            <Link to=\"/\">\r\n                <Tooltip title={chooseLang(language, \"홈으로 이동합니다.\")}>\r\n                    <img alt=\"logo\" src={logo} style={{width: \"85%\", maxWidth: \"400px\"}}/>\r\n                </Tooltip>\r\n            </Link>\r\n            <Row align=\"middle\" justify=\"center\">\r\n                <LanguageSelector/>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","import React, { useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport ClassChangePage from './View/Page/ClassChangePage';\nimport DungeonPage from './View/Page/DungeonPage';\nimport LandingPage from './View/Page/LandingPage';\nimport PersonalityPage from './View/Page/PersonalityPage';\nimport Header from './View/Component/Header/Header';\nimport Swal from 'sweetalert2';\n\nconst announceHTML = `<div class=\"announce\">\n  해당 사이트는 더 이상 업데이트가 진행되지 않습니다.\n  <br/>\n  This site will not be updated from now.\n  <br/><br/>\n  <a href=\"https://hu-lee.github.io/anothercharcheck/\" target=\"_blank\" rel=\"noreferrer\"><b>Please use Checklist Site instead.</b></a>\n  <br/>\n  <br/>\n  자세한 사항은 링크를 확인해 주세요.<br/>\n  Please Check following link.\n  <br/><br/>\n  <a href=\"https://aecheck.tistory.com/7\" target=\"_blank\" rel=\"noreferrer\">Patch Note</a>\n</div>`\n\nfunction App() {\n\n  useEffect(() => {\n    Swal.fire({\n      title: 'Update Stopped',\n      html: announceHTML,\n      icon: 'error',\n    })\n  }, [])\n\n  return (\n    <Router basename=\"/anotherdungeon\">\n        <Header />\n        <Route exact path=\"/\" component={LandingPage}/>\n        <Route exact path=\"/dungeon\" component={() => <Redirect to=\"/dungeon/ancient_miglania_swamp\"/>}/>\n        <Route exact path=\"/dungeon/:name\" component={DungeonPage}/>\n        <Route exact path=\"/class\" component={ClassChangePage}/>\n        <Route exact path=\"/personality\" component={PersonalityPage}/>\n        <footer style={{margin: \"1rem auto\", marginTop: '50px', textAlign: 'center',\n                minWidth: '250px', maxWidth: '400px'}}>\n            &copy; 2021. Made By <a href=\"https://github.com/HU-Lee\" target=\"_blank\" rel=\"noreferrer\">HU-Lee</a>\n        </footer>\n    </Router>  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_LANGUAGE } from \"./actions\";\r\n\r\n/*-- \r\nSPDX-FileCopyrightText: © 2021 Hyun Uk Lee <as0266@naver.com>\r\n\r\nSPDX-License-Identifier: MIT\r\n--*/  \r\n\r\n\r\nconst initialState = {\r\n    language: window.localStorage.getItem(\"language\") ? window.localStorage.getItem(\"language\") : \"kor\",\r\n}\r\n\r\nconst counter = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                language: action.language\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'; \nimport {createStore} from 'redux';\nimport reducers from './_redux/reducer';\nimport { Provider } from 'react-redux';\nimport ReactGA from 'react-ga';\n\nconst store = createStore(reducers);\n\nReactGA.initialize('UA-190586417-1');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}